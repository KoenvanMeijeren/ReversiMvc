@model ReversiMvc.Models.GameEditViewModel

@{
    ViewData["Title"] = "Reversi";
}

<div class="row">
    <div class="col-md-2">
        <h1>Reversi</h1>
        <p>@Html.DisplayFor(model => model.Description)</p>
        
        
        <div class = "fw-bold">
            Tegenstander
        </div>
        <div>
            @Model.Opponent
        </div>
        
        <div class="fw-bold">
            Dominante kleur
        </div>
        <div>
            @if ("White".Equals(Model.PredominantColor))
            {
                <div>Wit</div>
            }
            else if ("Black".Equals(Model.PredominantColor))
            {
                <div>Zwart</div>
            }
            else
            {
                <div>Geen</div>
            }
        </div>
        
        <div class="fw-bold">
            Winnaar
        </div>
        <div>
            @Model.PredominantPlayer
        </div>
        
        <div class="fw-bold">
            Status
        </div>
        <div>
            @if (!Model.IsPlayingOrEnded())
            {
                <p>Wachten op start</p>
            }
            else if (Model.IsPlaying()) {
                <p>Spelen</p>
            }
            else if (Model.IsQuit())
            {
                <p>Gestopt</p>
            }
            else if (Model.IsFinished())
            {
                <p>BeÃ«indigd</p>
            }
        </div>

        <div id="reversi-weather"></div>
    </div>

    <div class="col-md-8">
        @if (!Model.IsPlayingOrEnded())
        {
            @if (Model.IsPending()) {
                if (Model.IsLoggedInPlayerOwner()) {
                    <h2 class="text-success">Wachten op het starten van het spel...</h2>
                }
                else {
                    <h2 class="text-success">Tegenstander is het spel aan het starten...</h2>
                }
            }
            else {
                <h2 class="text-warning">Aan het wachten op een tegenstander...</h2>
            }
        }

        <div class="game w-100" data-game-token="@Model.Token" data-game-player="@Model.LoggedInPlayer.Guid">
            <div id="quit-game-timer-container"></div>
            <div id="game-play-@Model.Token"></div>
        </div>
    </div>

    <div class="col-md-2">
        @if (Model.CanAddPlayerTwo())
        {
            <a href="@Url.Action("AddPlayerTwo", new { token = Model.Token })" class="btn btn-primary">Deelnemen</a>
        }
        
        @if (Model.CanStart())
        {
            <a href="@Url.Action("Start", new { token = Model.Token })" class="btn btn-primary">Starten</a>
        }
        
        @if (Model.CanQuit())
        {
            <a href="@Url.Action("Quit", new { token = Model.Token })" class="btn btn-primary">Stoppen</a>
        }
    </div>
</div>
