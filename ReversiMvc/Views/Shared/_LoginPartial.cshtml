@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> _signInManager
@inject UserManager<IdentityUser> _userManager

<ul class="navbar-nav">
    @if (this._signInManager.IsSignedIn(User))
    {
        <li class="nav-item d-flex justify-content-start">
            @if (this.User.IsInRole(ApplicationRoleTypes.Admin))
            {
                <a class="nav-link text-dark" asp-controller="Account" asp-action="Users" title="Manage accounts">Accounts</a>
            }
            
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Account</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new {area = ""})">
                <button type="submit" class="nav-link btn btn-link text-dark mt-0">Uitloggen</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Registreren</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Inloggen</a>
        </li>
    }
</ul>